// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package gen

import (
	"time"
)

const TableNameGenTable = "gen_table"

// GenTable mapped from table <gen_table>
type GenTable struct {
	TableID        int64      `gorm:"column:table_id;type:bigint;primaryKey;autoIncrement:true" json:"tableId"` // 编号
	TableName_     *string    `gorm:"column:table_name;type:varchar(200)" json:"tableName"`                     // 表名称
	TableComment   *string    `gorm:"column:table_comment;type:varchar(500)" json:"tableComment"`               // 表描述
	SubTableName   *string    `gorm:"column:sub_table_name;type:varchar(64)" json:"subTableName"`               // 关联子表的表名
	SubTableFkName *string    `gorm:"column:sub_table_fk_name;type:varchar(64)" json:"subTableFkName"`          // 子表关联的外键名
	ClassName      *string    `gorm:"column:class_name;type:varchar(100)" json:"className"`                     // 实体类名称
	TplCategory    *string    `gorm:"column:tpl_category;type:varchar(200);default:crud" json:"tplCategory"`    // 使用的模板（crud单表操作 tree树表操作）
	PackageName    *string    `gorm:"column:package_name;type:varchar(100)" json:"packageName"`                 // 生成包路径
	ModuleName     *string    `gorm:"column:module_name;type:varchar(30)" json:"moduleName"`                    // 生成模块名
	BusinessName   *string    `gorm:"column:business_name;type:varchar(30)" json:"businessName"`                // 生成业务名
	FunctionName   *string    `gorm:"column:function_name;type:varchar(50)" json:"functionName"`                // 生成功能名
	FunctionAuthor *string    `gorm:"column:function_author;type:varchar(50)" json:"functionAuthor"`            // 生成功能作者
	GenType        *string    `gorm:"column:gen_type;type:char(1);default:0" json:"genType"`                    // 生成代码方式（0zip压缩包 1自定义路径）
	GenPath        *string    `gorm:"column:gen_path;type:varchar(200);default:/" json:"genPath"`               // 生成路径（不填默认项目路径）
	Options        *string    `gorm:"column:options;type:varchar(1000)" json:"options"`                         // 其它生成选项
	CreateBy       *string    `gorm:"column:create_by;type:varchar(64)" json:"createBy"`                        // 创建者
	CreateTime     *time.Time `gorm:"column:create_time;type:int unsigned;autoCreateTime" json:"createTime"`    // 创建时间
	UpdateBy       *string    `gorm:"column:update_by;type:varchar(64)" json:"updateBy"`                        // 更新者
	UpdateTime     *time.Time `gorm:"column:update_time;type:int unsigned;autoUpdateTime" json:"updateTime"`    // 更新时间
	Remark         *string    `gorm:"column:remark;type:varchar(500)" json:"remark"`                            // 备注
}

// TableName GenTable's table name
func (*GenTable) TableName() string {
	return TableNameGenTable
}
