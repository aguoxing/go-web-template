// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package gen

import (
	"time"
)

const TableNameGenTableColumn = "gen_table_column"

// GenTableColumn mapped from table <gen_table_column>
type GenTableColumn struct {
	ColumnID      int64      `gorm:"column:column_id;type:bigint;primaryKey;autoIncrement:true" json:"columnId"` // 编号
	TableID       *string    `gorm:"column:table_id;type:varchar(64)" json:"tableId"`                            // 归属表编号
	ColumnName    *string    `gorm:"column:column_name;type:varchar(200)" json:"columnName"`                     // 列名称
	ColumnComment *string    `gorm:"column:column_comment;type:varchar(500)" json:"columnComment"`               // 列描述
	ColumnType    *string    `gorm:"column:column_type;type:varchar(100)" json:"columnType"`                     // 列类型
	JavaType      *string    `gorm:"column:java_type;type:varchar(500)" json:"javaType"`                         // JAVA类型
	JavaField     *string    `gorm:"column:java_field;type:varchar(200)" json:"javaField"`                       // JAVA字段名
	IsPk          *string    `gorm:"column:is_pk;type:char(1)" json:"isPk"`                                      // 是否主键（1是）
	IsIncrement   *string    `gorm:"column:is_increment;type:char(1)" json:"isIncrement"`                        // 是否自增（1是）
	IsRequired    *string    `gorm:"column:is_required;type:char(1)" json:"isRequired"`                          // 是否必填（1是）
	IsInsert      *string    `gorm:"column:is_insert;type:char(1)" json:"isInsert"`                              // 是否为插入字段（1是）
	IsEdit        *string    `gorm:"column:is_edit;type:char(1)" json:"isEdit"`                                  // 是否编辑字段（1是）
	IsList        *string    `gorm:"column:is_list;type:char(1)" json:"isList"`                                  // 是否列表字段（1是）
	IsQuery       *string    `gorm:"column:is_query;type:char(1)" json:"isQuery"`                                // 是否查询字段（1是）
	QueryType     *string    `gorm:"column:query_type;type:varchar(200);default:EQ" json:"queryType"`            // 查询方式（等于、不等于、大于、小于、范围）
	HTMLType      *string    `gorm:"column:html_type;type:varchar(200)" json:"htmlType"`                         // 显示类型（文本框、文本域、下拉框、复选框、单选框、日期控件）
	DictType      *string    `gorm:"column:dict_type;type:varchar(200)" json:"dictType"`                         // 字典类型
	Sort          *int64     `gorm:"column:sort;type:int" json:"sort"`                                           // 排序
	CreateBy      *string    `gorm:"column:create_by;type:varchar(64)" json:"createBy"`                          // 创建者
	CreateTime    *time.Time `gorm:"column:create_time;type:int unsigned;autoCreateTime" json:"createTime"`      // 创建时间
	UpdateBy      *string    `gorm:"column:update_by;type:varchar(64)" json:"updateBy"`                          // 更新者
	UpdateTime    *time.Time `gorm:"column:update_time;type:int unsigned;autoUpdateTime" json:"updateTime"`      // 更新时间
}

// TableName GenTableColumn's table name
func (*GenTableColumn) TableName() string {
	return TableNameGenTableColumn
}
